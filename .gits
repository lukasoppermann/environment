# git alias
alias status="git status"
alias st="git status --ignore-submodules"
alias commit="git commit"
alias clone="git clone"
alias cm="git commit -m"
cur_git_branch() {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}
# push
function push {
  if [[ $1 == "tags" || $1 == "tag" ]]; then
    git push --tags origin $(cur_git_branch)
  elif [[ $1 == "-f" && ($2 == "tag" || $2 == "tags") ]]; then
    git push -f --tags origin $(cur_git_branch)
  elif [[ ! -z "$1" ]]; then
    git push $1 $(cur_git_branch)
  else
    git push origin $(cur_git_branch)
  fi
}

alias pull="git pull"
alias rebase="git rebase -i"
alias continue="git rebase --continue"
alias add="git add"
alias add.="git add --all"
alias ca="git commit -am"
alias ck="git checkout"
alias b="git branch -a"
alias cherry="git cherry-pick"
alias dif="git diff"
alias remote="git remote add"
alias fetch="git fetch"
alias conflicts="git diff --name-only --diff-filter=U"
alias fix="git diff --name-only | uniq | xargs mate"
alias discard="git stash save --keep-index; git stash drop"
alias tag="git tag"
alias tags="git tag"

alias log="git log \$(cur_git_branch) --decorate --graph --oneline --date-order"
alias hlog="git reflog"
alias sub="git submodule"
alias sup="git submodule foreach 'git checkout master; git pull;'"

# clone down issues
alias handkerchief=~"/projects/knowledge-base/handkerchief/handkerchief.py"
function issues {
	hand=~/projects/knowledge-base/handkerchief/handkerchief.py
	if [[ $1 != "" ]] ; then
    python $hand $1
	else
    repo=$(git remote -v | head -n1 | awk '{print $2}' | sed -e 's,.*:\(.*/\)\?,,' -e 's/\.git$//')
    if [[ $repo == *https://* ]] ; then
      python $hand ${repo#https://github.com/}
    elif [[ $repo == *git@github.com* ]] ; then
      python $hand ${repo#git@github.com:}
    else
      echo "Provide parameter"
    fi
	fi
}

