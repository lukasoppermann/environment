# open bash files
alias profile="nano . ~/.bash_profile"
alias aliases="nano . $dotFilePath.server_aliases"
alias gits="nano . $dotFilePath.gits"
alias exports="nano . $dotFilePath.exports"

# ssh access
function sshcp {
  server="ssh-373917-veare@185.21.102.106:~/"
  echo "copying $server$1 to $2"
  scp $server$1 $2
}

# find folder
function f {
  if [[ -d "$1" ]]; then
    cd $1
  elif [[ -d "../$1" ]]; then
    cd ../$1
  elif [[ -d "../../$1" ]]; then
    cd ../$1
  elif [[ -d $(find . -name $1 -type d -quit) ]]; then
    cd $(find . -name $1 -type d -quit)
  else
    cd $(find ~ -name $1 -type d)
  fi
}

# laravel artisan
alias art="php artisan"
alias phpunit="vendor/bin/phpunit"
alias unit="vendor/bin/phpunit --stderr"
alias dump="composer dump-autoload & art dump-autoload"

# composer update
function composer {
  var_composer="/usr/local/bin/composer"
	if [[ $1 == "update" ]] ; then
		echo "Self update:"
		 $var_composer self-update
		echo "Updating packages:"
		$var_composer update
	else
		$var_composer "$@"
	fi
}

# shortcuts
alias c="clear"
alias clrear="clear"
alias clrea="clear"
alias clrea="clear"

# general directories
alias p="cd ~/"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# list all files
# -G -A=include hidden, but not . and ..; -F=/ after dir to mark it as such
alias l='ls'
alias ls='ls -GAF ${colorflag}'

# List all files colorized in long format, including dot files
alias ll="ls -laF ${colorflag}"

# List only directories
alias ld='ls -lF ${colorflag} | grep "^d"'

############################
# functions

# reload file
function reload {
	if [[ $1 == "" ]] ; then
		source ~/.bash_profile
	elif [ -f ~/.${1#.} ]; then
		source ~/.${1#.}
	elif [ -f $dotFilePath.${1#.} ]; then
		source $dotFilePath.$1
	else
		echo "File not found in: ~/.${1#.} and $dotFilePath.${1#.} not found."
	fi
}

# add ignore file from github to this repo
function ignore {
	wget https://raw.githubusercontent.com/lukasoppermann/knowledge-base/master/project/.gitignore
}
